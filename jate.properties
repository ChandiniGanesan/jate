############################################################################
#		Mapping with Solr config/schema for Term Recognition Algorithms	   #
############################################################################
# Value type: string
# Required
# The solr home directory
solrhome=/Users/-/jate/solr-5.3.0/server/solr

# Value type: string
# Required
# The solr core name
solrcore=jate

# Value type: string
# Required
# The Solr uniqueKey field encodes the identity semantics of a document.
solr_field_id=id
#fieldname_id

# Value type: string
# Required
# Solr Content/Text Field to index and store shingles (i.e., word-based n-gram) by means of solr.shinglefilterfactory
# 	where statistic information of candidate terms ( e.g., frequency, offsets, etc.) will be looked up
# MUST BE INDEXED by a Term Recognition (TR) aware analyser with termVectors and termOffsets set to true
# Refer to "schema.xml" for the example setting

# TODO: ziqi: the concept is ambiguous and conflict with text_2_words field. 
# 	If we want to have an additional field to support ngram based term candidate extraction method, this field should be optional!! 
#   And we need setting to choose which candidate extraction method to use.
solr_field_content_ngrams=jate_ngraminfo

# Value type: string
# Required
# Solr Content/Text Field to index and store candidate terms. 
# MUST BE INDEXED by a TR aware analyser with termVectors and termOffsets set to true
# Refer to "schema.xml" for the example setting
solr_field_content_terms=jate_cterms

# Value type: string
# Optional
# This is a solr multivalued string field to keep sentence-level features 
# 	for TR algorithms (e.g., Chi-Square and NC-Value)
# Refer to "schema.xml" for the example setting
#
# IF YOU DO NOT NEED SENTENCE-LEVEL FEATURES, SET THE VALUE TO 
# -EMPTY STRING-, OR COMMENT IT OUT. OTHERWISE THESE WILL BE 
# CREATED AND OVERHEADS CAUSED. 
#
# TODO: ziqi: we should not ask users to additionally comment out particular setting!.
#  	We need to only index content for what is necessary.
#   For any optional setting, user should not need to worry about and just keep it as it is.
solr_field_sentences=jate_sentences

# Value type: string
# OPTIONAL
# This is a Solr Content/Text Field required by TR algorithms (e.g., GlossEx and TermEx) that needs word-level
# 	features (i.e., no shingle filter)
# Refer to "schema.xml" for the example setting
#
# IF YOU DO NOT NEED WORD-LEVEL FEATURES, SET THE VALUE TO -EMPTY
# STRING-, OR COMMENT IT OUT. OTHERWISE THESE WILL BE CREATED AND 
# OVERHEADS CAUSED. 

# TODO: ziqi: Your description is ambiguous. what do you mean about the words and all the words ?? 
#	Your example setting has the stopfilter and the "word" depends on how we tokenise the text 
#   For word-level features, we can retrieve the same information from text_2_ngram field. This field seems duplicated.
#   Again, we should not ask users to additionally comment out particular setting! We should only index content for what is necessary.
solr_field_content_words=jate_words

# Value type: string
# OPTIONAL
# This is a Solr Content/Text dynamic field mapping document parts by Tika (e.g.,title, links, first paragraph, etc.)
# MUST BE INDEXED by a TR aware analyser
# 
# Mapping document parts with terms provide a way to trace the part of a document where a term is found. 
# Such information can be used by some ATR algorithms. However most ATR
# 	algorithms do not use such information.
# Refer to "schema.xml" for the example setting
# 
# TODO: ziqi: it is better to conform to solr field naming convention 
# 	and recommend to set meaningful field name "_*" + field type abbv. (e.g., "*_text2Terms") for indexed dynamic fields
#   Please also refer to the example in App* source code in comments about how to use the functionality
solr_field_map_doc_parts=jate_cterms_f*

############################################################################
#			Run-time parameters for Term Candidate Extraction	           #
############################################################################

# Value type: number
# Required
# Minimum (whole index) frequency allowed for term candidates. Default value is 1
# increase for better precision
min_total_term_freq=1

# Value type: number
# optional
# Min frequency of a term appearing in different context
min_term_context_freq=1

# Value type: String
# Required
# Sentence splitter class 
# TODO: ziqi: not sure why you expose this as a setting. I think it is too much for the setting.
#       Also, it is not decent and useful way to allow to configure different splitter.
#       I suggest we just default to use our openNLP as default with pre-trained model loaded from class path
#       In TR request handler, we can support to configure a model in solrconfig.xml
nlp_sentence_splitter_class=uk.ac.shef.dcs.jate.nlp.opennlp.SentenceSplitterOpenNLP
nlp_sentence_splitter_params=/Users/-/jate/resource/en-sent.bin

#################################################
#			Performance Tuning			        #
#################################################

# Value type: number
# OPTIONAL
# Performance parameter for performance tuning
# Maximum of terms each thread (worker) of a FeatureBuilder should
# 	process. 
# When not defined or invalid value is used, default as 1000
# TODO: ziqi: can't see any importance to set this explicitly
featurebuilder_max_terms_per_worker=2000

# Value type: number
# OPTIONAL
# Performance parameter for performance tuning
# Maximum of docs each thread (worker) of a FeatureBuilder should
# 	process. 
# When not defined or invalid value is used, default as 50
# TODO: ziqi: can't see any importance to set this explicitly
featurebuilder_max_docs_per_worker=500

# Value type: number
# OPTIONAL
# Performance parameter for performance tuning
# Maximum of documents each thread (worker) of a 
# 	SolrParallelIndexingWorker should process. 
# When not defined or invalid value is used, default as 100 

# TODO: ziqi: why would this needs to different setting for threads for both feature builder and indexer ? 
#			the setting is too verbose. We should have only one setting say "num_threads"
indexer_max_docs_per_worker=10000

# Value type: number
# OPTIONAL
# Performance parameter for performance tuning
# Maximum of data units each thread (worker) of a 
# 	SolrParallelIndexingWorker should commit to solr. 
# When not defined or invalid value is used, default as 500
indexer_max_units_to_commit=500

# Value type: number
# OPTIONAL
# Performance parameter for performance tuning
# Maximum % of CPU cores that parallel processes of JATE can use in.
# When not defined or invalid value is used, default as 1.0 (100% of CPU cores)

# TODO: ziqi: not completely sure what is 1.0 (guess it means 100%). should use only 1 cpu core as default
max_cpu_usage=1.0